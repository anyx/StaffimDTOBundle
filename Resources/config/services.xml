<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
    <parameters>
        <parameter key="staffim_dto.dto.factory.class">Staffim\DTOBundle\DTO\Factory</parameter>
        <parameter key="staffim_dto.dto.property_accessor.class">Staffim\DTOBundle\DTO\PropertyAccessor</parameter>

        <parameter key="staffim_dto.mapping_storage.request.class">Staffim\DTOBundle\MappingStorage\RequestMappingStorage</parameter>
        <parameter key="staffim_dto.mapping_storage.cache.class">Staffim\DTOBundle\MappingStorage\CacheMappingStorage</parameter>

        <parameter key="staffim_dto.mapping_configurator.class">Staffim\DTOBundle\Request\MappingConfigurator</parameter>
        <parameter key="staffim_dto.odm.fields_primer.class">Staffim\DTOBundle\ODM\FieldsPrimer</parameter>

        <parameter key="staffim_dto.dto.mapper.class">Staffim\DTOBundle\DTO\Mapper</parameter>
        <parameter key="staffim_dto.serializer.model_handler.class">Staffim\DTOBundle\Serializer\ModelHandler</parameter>
        <parameter key="staffim_dto.hateoas.dto_relation_provider.class">Staffim\DTOBundle\Hateoas\DTORelationProvider</parameter>
        <parameter key="staffim_dto.hateoas.relation_provider.class">Staffim\DTOBundle\Hateoas\RelationProvider</parameter>
        <parameter key="staffim_dto.dto.model_name_resolver.class">Staffim\DTOBundle\DTO\ModelNameResolver</parameter>

        <parameter key="staffim_dto.param_converter.dto.class">Staffim\DTOBundle\Request\ParamConverter\DTOParamConverter</parameter>
        <parameter key="staffim_dto.param_converter.pagination.class">Staffim\DTOBundle\Request\ParamConverter\PaginationParamConverter</parameter>
        <parameter key="staffim_dto.param_converter.sorting.class">Staffim\DTOBundle\Request\ParamConverter\SortingParamConverter</parameter>
        <parameter key="staffim_dto.render.listener.class">Staffim\DTOBundle\EventListener\RenderListener</parameter>

        <parameter key="staffim_dto.dto.factory.namespace"/>
        <parameter key="staffim_dto.dto.factory.postfix"/>
        <parameter key="staffim_dto.trigger_events"/>
    </parameters>

    <services>
        <!-- Mapper stuff -->
        <service id="staffim_dto.dto.factory" class="%staffim_dto.dto.factory.class%">
            <argument>%staffim_dto.dto.factory.namespace%</argument>
            <argument>%staffim_dto.dto.factory.postfix%</argument>
        </service>
        <service id="staffim_dto.dto.property_accessor" class="%staffim_dto.dto.property_accessor.class%">
        </service>

        <!-- storages -->
        <service id="staffim_dto.mapping_storage.request" class="%staffim_dto.mapping_storage.request.class%" public="false">
            <argument type="service" id="request_stack"/>
        </service>
        <service id="staffim_dto.mapping_storage.cache" class="%staffim_dto.mapping_storage.cache.class%" public="false">
            <argument type="service" id="staffim_dto.mapping_storage.request"/>
        </service>

        <service id="staffim_dto.mapping_configurator" class="%staffim_dto.mapping_configurator.class%">
            <argument type="service" id="staffim_dto.mapping_storage"/>
        </service>

        <service id="staffim_dto.odm.fields_primer" class="%staffim_dto.odm.fields_primer.class%">
            <argument type="service" id="staffim_dto.mapping_storage"/>
        </service>

        <service id="staffim_dto.dto.model_name_resolver" class="%staffim_dto.dto.model_name_resolver.class%">
        </service>

        <service id="staffim_dto.dto.mapper" class="%staffim_dto.dto.mapper.class%">
            <argument type="service" id="staffim_dto.dto.property_accessor"/>
            <argument type="service" id="staffim_dto.dto.factory"/>
            <argument type="service" id="staffim_dto.dto.model_name_resolver"/>
            <argument type="service" id="staffim_dto.mapping_configurator"/>
        </service>

        <service id="staffim_dto.patch.mapper" class="%staffim_dto.dto.mapper.class%" public="false">
            <argument type="service" id="staffim_dto.dto.property_accessor"/>
            <argument type="service" id="staffim_dto.dto.factory"/>
            <argument type="service" id="staffim_dto.dto.model_name_resolver"/>
        </service>

        <!-- Serializer stuff -->
        <service id="staffim_dto.serializer.model_handler" class="%staffim_dto.serializer.model_handler.class%">
            <call method="setObjectManager">
                <argument type="service" id="doctrine.odm.mongodb.document_manager" on-invalid="ignore"/>
            </call>
            <call method="setObjectManager">
                <argument type="service" id="doctrine.orm.entity_manager" on-invalid="ignore"/>
            </call>
            <tag name="jms_serializer.subscribing_handler"/>
        </service>

        <!-- Relation providers -->
        <service id="staffim_dto.hateoas.dto_relation_provider" class="%staffim_dto.hateoas.dto_relation_provider.class%" public="true">
            <argument type="service" id="jms_serializer.metadata_factory"/>
            <argument type="service" id="jms_serializer.expression_evaluator"/>
        </service>
        <service id="staffim_dto.hateoas.relation_provider" class="%staffim_dto.hateoas.relation_provider.class%">
            <argument type="service" id="staffim_dto.hateoas.dto_relation_provider"/>
            <tag name="hateoas.relation_provider" />
        </service>

        <service id="acme_foo.hateoas.configuration_extension.foobar" class="Staffim\DTOBundle\Hateoas\DTOConfigurationExtension">
            <argument type="service" id="staffim_dto.hateoas.dto_relation_provider"/>
            <tag name="hateoas.configuration_extension" />
        </service>

        <!-- Param converters -->
        <service id="staffim_dto.param_converter.dto" class="%staffim_dto.param_converter.dto.class%">
            <argument type="service" id="jms_serializer"/>
            <argument type="service" id="validator"/>
            <call method="setMapper">
                <argument type="service" id="staffim_dto.patch.mapper"/>
            </call>
            <call method="setFilterer">
                <argument type="service" id="filterer"/>
            </call>
            <tag name="request.param_converter" priority="200"/>
        </service>
        <service id="staffim_dto.param_converter.pagination" class="%staffim_dto.param_converter.pagination.class%">
            <tag name="request.param_converter"/>
        </service>
        <service id="staffim_dto.param_converter.sorting" class="%staffim_dto.param_converter.sorting.class%">
            <tag name="request.param_converter"/>
        </service>
        <service id="staffim_dto.render.listener" class="%staffim_dto.render.listener.class%">
            <argument type="service" id="jms_serializer"/>
            <argument type="service" id="staffim_dto.dto.mapper"/>
            <tag name="kernel.event_listener" event="kernel.view" method="onKernelView"/>
        </service>

        <!-- Filterer -->
        <service id="filterer.metadata.metadata_driver" class="Staffim\DTOBundle\Filterer\Metadata\AnnotationDriver">
            <argument type="service" id="annotation_reader"/>
        </service>
        <service id="filterer.metadata.metadata_factory" class="Metadata\MetadataFactory">
            <argument type="service" id="filterer.metadata.metadata_driver"/>
            <argument>Metadata\ClassHierarchyMetadata</argument>
            <argument>%kernel.debug%</argument>
        </service>
        <service id="filterer.annotation_filter_factory" class="Staffim\DTOBundle\Filterer\AnnotationFilterFactory">
        </service>
        <service id="filterer" class="Staffim\DTOBundle\Filterer\Filterer">
            <argument type="service" id="filterer.metadata.metadata_factory"/>
            <argument type="service" id="filterer.annotation_filter_factory"/>
        </service>
        <service id="filterer.html_purifier" class="Staffim\DTOBundle\Filterer\Filters\HTMLPurifier">
            <tag name="filterer.filter" alias="html_purifier"/>
        </service>
        <service id="staffim_dto.expression_language.function_provider" class="Staffim\DTOBundle\ExpressionLanguage\DTOFunctionsProvider" public="false">
            <tag name="jms.expression.function_provider"/>
        </service>
    </services>
</container>
